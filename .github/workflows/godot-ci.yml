name: "godot-ci export"
on:
  push:
    branches:
      - main
      - dev
env:
  GODOT_VERSION: 3.3
  EXPORT_NAME: godot-game-template
  ITCH_IO: ${{ false }} #set to true if you want to enable automatic itch.io deploy
  RELEASE_ANDROID: ${{ false }} #set to  true if you want to enable automatic android release export

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          godot -v --export "Windows Desktop" ./build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows
      - name: Zip Folder
        run: zip -r itch.zip build/windows
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO==true }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: windows
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: itch.zip

  export-linux:
    name: Linux Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          godot -v --export "Linux/X11" ./build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux
      - name: Zip Folder
        run: zip -r itch.zip build/linux
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO==true }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: linux
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: itch.zip


  export-web:
    name: Web Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          godot -v --export "HTML5" ./build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: web
          path: build/web
      # Installing rsync is needed in order to deploy to GitHub Pages. Without it, the build will fail.
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build/web # The folder the action should deploy.
      - name: Zip Folder
        run: zip -r itch.zip build/web
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO==true }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: HTML
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: itch.zip

  export-mac:
    name: Mac Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.3
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          godot -v --export "Mac OSX" ./build/mac/$EXPORT_NAME.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: mac
          path: build/mac
      - name: Zip Folder
        run: zip -r itch.zip build/mac
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO==true }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: mac
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: itch.zip

  export-android:
    name: Android Export
    runs-on: ubuntu-latest
    container:
      image: myood/godot-ci-android-export:godot-3.3
    steps:

      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
          mkdir -v -p ~/.config/godot/
          cp /root/.config/godot/editor_settings-3.tres ~/.config/godot/editor_settings-3.tres
          echo 'export/android/debug_keystore = "/root/android-sdk/debug.keystore"' >> ~/.config/godot/editor_settings-3.tres
          echo 'export/android/android_sdk_path = "/root/android-sdk"' >> ~/.config/godot/editor_settings-3.tres
      - name: Android Debug Build
        run: |
          mkdir -v -p build/android
          godot --verbose --export-debug "Android" ./build/android/$EXPORT_NAME.debug.apk
      - name: Android Release Build
        if: ${{ env.RELEASE_ANDROID==true }}
        env:
            K8S_SECRET_RELEASE_KEYSTORE_BASE64: ${{ secrets.K8S_SECRET_RELEASE_KEYSTORE_BASE64 }}
            K8S_SECRET_RELEASE_KEYSTORE_USER : ${{ secrets.K8S_SECRET_RELEASE_KEYSTORE_USER  }}
            K8S_SECRET_RELEASE_KEYSTORE_PASSWORD : ${{ secrets.K8S_SECRET_RELEASE_KEYSTORE_PASSWORD  }}
        run: |
          echo $K8S_SECRET_RELEASE_KEYSTORE_BASE64 | base64 --decode > /root/release.keystore
          sed 's@keystore/release[[:space:]]*=[[:space:]]*".*"@keystore/release = "/root/release.keystore"@g' -i export_presets.cfg
          sed 's@keystore/release_password[[:space:]]*=[[:space:]]*".*"@keystore/release_password="'$K8S_SECRET_RELEASE_KEYSTORE_PASSWORD'"@g' -i export_presets.cfg
          sed 's@keystore/release_user[[:space:]]*=[[:space:]]*".*"@keystore/release_user="'$K8S_SECRET_RELEASE_KEYSTORE_USER'"@g' -i export_presets.cfg
          godot --verbose --export "Android" ./build/android/$EXPORT_NAME.release.apk          
      - uses: actions/upload-artifact@v1
        with:
          name: android
          path: build/android
      - name: Zip Folder
        run: zip -r itch.zip build/android
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO==true }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: android
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: itch.zip

