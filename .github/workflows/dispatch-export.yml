name: "Dispatch Export"
on:
  workflow_dispatch:
    inputs:
      godot_version:
        description: "Godot Version"
        required: true
        default: "4.4.1"
      export_platform:
        description: "Export Platform - all|windows|linux|web|macos"
        required: true
        default: "all"
      export_folder:
        description: "Export Folder - Repository Path"
        required: true
        default: "."
      export_name:
        description: "Export Name"
        required: true
        default: "godot-game-template"
      itch_io:
        description: "Itch.io Build"
        required: false
        default: "false"

env:
  GODOT_VERSION: ${{ github.event.inputs.godot_version }}
  EXPORT_PLATFORM: ${{ github.event.inputs.export_platform }}
  EXPORT_FOLDER: ${{ github.event.inputs.export_folder }}
  EXPORT_NAME: ${{ github.event.inputs.export_name }}
  ITCH_IO: ${{ github.event.inputs.itch_io }}

jobs:
  export_windows:
    name: Windows Export
    runs-on: ubuntu-22.04
    if: ${{ github.event.inputs.export_platform == 'windows' || github.event.inputs.export_platform == 'all' }}
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          cd ${EXPORT_FOLDER}
          mkdir -v -p build/windows
          godot -v --export-release "Windows Desktop" ./build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Windows
          path: ${{ env.EXPORT_FOLDER }}/build/windows
      - name: Zip Folder
        run: zip -r itch.zip ${{ env.EXPORT_FOLDER }}/build/windows
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO == 'true' }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: windows
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: itch.zip

  export_linux:
    name: Linux Export
    runs-on: ubuntu-22.04
    if: ${{ github.event.inputs.export_platform == 'linux' || github.event.inputs.export_platform == 'all' }}
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          cd ${EXPORT_FOLDER}
          mkdir -v -p build/linux
          godot -v --export-release "Linux/X11" ./build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Linux
          path: ${{ env.EXPORT_FOLDER }}/build/linux
      - name: Zip Folder
        run: zip -r itch.zip ${{ env.EXPORT_FOLDER }}/build/linux
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO == 'true' }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: linux
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: itch.zip

  export_web:
    name: Web Export
    runs-on: ubuntu-22.04
    if: ${{ github.event.inputs.export_platform == 'web' || github.event.inputs.export_platform == 'all' }}
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          cd ${EXPORT_FOLDER}
          mkdir -v -p build/web
          godot -v --export-release "HTML5" ./build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Web
          path: ${{ env.EXPORT_FOLDER }}/build/web
      # Installing rsync is needed in order to deploy to GitHub Pages. Without it, the build will fail.
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: ${{ env.EXPORT_FOLDER }}/build/web # The folder the action should deploy.
      - name: Zip Folder
        run: zip -r itch.zip ${{ env.EXPORT_FOLDER }}/build/web
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO == 'true' }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: HTML
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: itch.zip

  export_mac:
    name: Mac Export
    runs-on: ubuntu-22.04
    if: ${{ github.event.inputs.export_platform == 'macos' || github.event.inputs.export_platform == 'all' }}
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          cd ${EXPORT_FOLDER}
          mkdir -v -p build/mac
          godot -v --export-release "Mac OSX" ./build/mac/$EXPORT_NAME.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Mac
          path: ${{ env.EXPORT_FOLDER }}/build/mac
      - name: Zip Folder
        run: zip -r itch.zip ${{ env.EXPORT_FOLDER }}/build/mac
      - name: Deploy to itch.io
        if: ${{ env.ITCH_IO == 'true' }}
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: mac
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          PACKAGE: itch.zip
